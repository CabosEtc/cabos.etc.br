121 - recupera ultimo link bd 
125 - recupera o ultimo id da tabela (para poder voltar a ler o primeiro quando terminar)
faz um select de 8 registros na tabela links_boadica a partir do ultima id varrido
182 - inicializa a funcao AbreSite
200 - inicializa um loop while, para varrer os 8 itens selecionados acima
    variaveis: id, produto, link, cdproduto, marca, localizador
    224 - abre a pagina da Url "link" e atribui a variavel $pagina 
    227 - avalia IF se a pagina tem tamanho diferente de 133 bytes (significa que conseguiu abrir)
    249 - dá uma limpada no conteudo da variavel pagina (limitando a area de dados)
    253 - Os dados ainda sujos, mas reduzidos, estão agora na variavel $dados_novos
    257 - Procura pelo nome da Cabos na variavel $dados_novos
            se nao achar nosso anuncio
                ele avalia se a pagina foi aberta, se nao foi (tamanho 133) acusa o erro, seta flag_erro_abertura=1
                escreve na tabela do link_boadica que o anuncio estava desativado
                coloca o valor do ultimo id lido na tabela parametros, para recomecar dali
                dá um break na pagina
            se achar o nosso 
                escreve na tabela do link_boadica que o anuncio estava ativado
    291 - mesma coisa para cabos 2
    311 - mesma coisa para super game
    332 - mesma coisa para a supernova
    366 - pesquisa a ultima alteracao de precos da cabos na tabela links_boadica_detalhes
    382 - faz indicacao visual do status 
    389 - mesma coisa para cabos 2
    424 - cabecalho de informações sobre o anuncio (imagem ativo, flag, marca, nome, localizador, etc...)
    435 - mais informações
    450 - o conteudo da pagina é dividido em linhas usando preg_split
    456 - inicia um laço foreach lendo o conteudo que está em linhas_dados linha a linha
        // Nome
        470 - isola o nome da loja
        472 - procura se a loja é cadastrada
        475 - se for cadastrada
                476 - acha o id
                478 - acha o flag do predio
                490 - pesquisa a ultima alteracao de precos

        504 - se nao for cadastrada
                506 - apaga eventual registro no log para nao gerar infinitas duplicidades
                511 - insere no log o codigo 300 (loja não cadastrada)
        // Preço
        518 - inicio do nó preço
        527 - localiza o preço
        531 - ranking do preço (lugar no posicionamento de preços)
        540 - rotina para gravar no log informação do nosso preço abaixo do segundo lugar
        564 - se a loja está cadastrada e não teve preço alterado hoje
                insere o dado na tabela links_boadica_detalhes_lojas, se o preço for diferente do preço anterior
    605 - fecha o foreach da linha 456
621 - fecha o laço do loop iniciado em 200






